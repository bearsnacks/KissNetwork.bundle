#!/usr/bin/env python

"""
KissNetwork shared code
Setup Domain names dynamically
"""

# import section(s) not included in Plex Plug-In Framwork
import sys
import os
from io import open
import json

# constants
BUNDLE_PATH = os.path.join(os.getcwd().lstrip('\\\?').split('Plug-in Support')[0], 'Plug-ins', 'KissNetwork.bundle')
MODULE_PATH = os.path.join(BUNDLE_PATH, 'Contents', 'Libraries', 'Shared')
SUPPORT_PATH = os.path.join(BUNDLE_PATH.split('Plug-ins')[0], 'Plug-in Support', 'Data', 'com.plexapp.plugins.kissnetwork')
DOMAIN_FILE = os.path.join(SUPPORT_PATH, 'Domain_Dict')

USER_AGENT = (
    'Mozilla/5.0 (Windows NT 6.1; Win64; x64) '
    'AppleWebKit/537.36 (KHTML, like Gecko) '
    'Chrome/49.0.2623.110 Safari/537.36'
    )

# add custom modules to python path
if MODULE_PATH not in sys.path:
    sys.path.append(MODULE_PATH)
    Log.Debug('*' * 80)
    Log.Debug('* Library path below, added to sys.path, by domain.pys')
    Log.Debug('* {}'.format(MODULE_PATH))
    Log.Debug('*' * 80)

# Import Custom modules from MODULE_PATH
import requests

####################################################################################################
def get_domain_dict(fresh=False):
    """cache control for deafutl domain dictionary"""

    #url = String.Base64Decode('aHR0cHM6Ly9naXN0LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Ud291cmUvOGJiNTQwMzM3ZGVmYWY3MTg4ZTZjMDE5NDUzMDc2NjEvcmF3')
    # if fresh:
        # default_domain_dict = JSON.ObjectFromURL(url, cacheTime=0)
    # else:
        # default_domain_dict = JSON.ObjectFromURL(url, cacheTime=CACHE_1DAY)
		
    default_domain_dict = JSON.ObjectFromString(D('eyJkcmFtYSI6ICJodHRwOi8va2lzc2FzaWFuLmNvbSIsICJjb21pYyI6ICJodHRwOi8vcmVhZGNvbWljb25saW5lLnRvIiwgIm1hbmdhIjogImh0dHA6Ly9raXNzbWFuZ2EuY29tIiwgImFuaW1lIjogImh0dHA6Ly9raXNzYW5pbWUucnUiLCAiY2FydG9vbiI6ICJodHRwOi8va2ltY2FydG9vbi5tZSJ9'))

    return default_domain_dict

####################################################################################################
def SetDomainURL(string, fresh=False):
    """
    Get the domain url dynamically
    Sites like the Kiss Sites sometimes change thier domain names
    This will find the new domain and return it
    """

    Log.Debug('* SetDomainURL: string = {}'.format(string))

    default_domain_dict = get_domain_dict(fresh)
    test = default_domain_dict[string]

    try:
        r = requests.head(test, headers={'user-agent': USER_AGENT})
    except:
        Log.Exception('* SetDomainURL Error: Unable to handle URL \"{}\"'.format(test))
        return test

    status = int(r.status_code)
    Log.Debug('* Header Status Code = {}'.format(status))

    if status == 301:
        try:
            r_domain = r.headers['location']
            r_domain = r_domain[:-1] if r_domain.endswith('/') else r_domain
            Log.Debug('* Current Domain \"{}\" different from test \"{}\"'.format(r_domain, test))
            return r_domain
        except:
            Log.Exception('* SetDomainURL Error: Unable to process headers for \"{}\"'.format(test))
    elif status == 503 or status == 200:
        url = r.url[:-1] if r.url.endswith('/') else r.url
        if url == test:
            Log.Debug('* Current Domain \"{}\" and test \"{}\" are the same.'.format(url, test))
        else:
            Log.Error('* SetDomainURL Error: Status Code check FAILD.')
            Log.Error('* SetDomainURL Error: Current Domain \"{}\" and \"{}\" are NOT the same.'.format(url, test))
    else:
        Log.Critical('* SetDomainURL Error: Cannot find Domain for {}'.format(string.title()))

    return test

####################################################################################################
def SaveDomainDict(content=dict):
    """ Save Domains to file json file """

    Log.Debug('* Saving Domains to file')

    with open(DOMAIN_FILE, 'wb') as f:
        json.dump(content, f, indent=4, sort_keys=True, separators=(',', ': '))

    Log.Debug('* Domain Dictionary file has been saved')
    Log.Debug('*' * 80)

    return

####################################################################################################
def CreateDomainDict(fresh=False):
    """setup the domain dict"""

    Log.Debug('*' * 80)
    for i, item in enumerate(['anime', 'drama', 'cartoon', 'manga', 'comic']):
        if i == 0:
            temp_dict = {item.title(): SetDomainURL(item, fresh)}
        else:
            temp_dict.update({item.title(): SetDomainURL(item, fresh)})
    return SaveDomainDict(temp_dict)

####################################################################################################
def LoadDomainDict():
    """load domain dict to json format string"""

    if os.path.isfile(DOMAIN_FILE) and os.stat(DOMAIN_FILE).st_size != 0:
        with open(DOMAIN_FILE, 'rb') as data_file:
            data = json.load(data_file)
        return data
    else:
        CreateDomainDict()
        return LoadDomainDict()

####################################################################################################
def UpdateDomain(kind, fresh=False):
    """Update only one domain"""

    d = LoadDomainDict()
    d.update({kind: SetDomainURL(kind.lower(), fresh)})
    return SaveDomainDict(d)
